<Controls:MetroWindow x:Class="MediaPlayer.ViewMediaPlayer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MediaPlayer"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converters="clr-namespace:MediaPlayer.Converters;assembly=MediaPlayer.Converters"
        mc:Ignorable="d"
        SaveWindowPosition="True"
        GlowBrush="{DynamicResource AccentColorBrush}"
        Title="{Binding ModelMediaPlayer.SelectedMediaItem.WindowTitle, FallbackValue='Media Player'}" ShowMaxRestoreButton="False" Height="768" Width="1366" MinHeight="768" MinWidth="1366" Activated="MetroWindow_Activated">
    <Window.InputBindings>
        <KeyBinding Command="{Binding PlayPauseCommand}" Key="Space"/>
    </Window.InputBindings>
    <Controls:MetroWindow.Background>
        <SolidColorBrush Color="Black" Opacity="{Binding ApplicationSettings.Opacity}"/>
    </Controls:MetroWindow.Background>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding OpenSettingsWindowCommand}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20"  Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{StaticResource appbar_settings}" Stretch="Fill" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                               VerticalAlignment="Center"
                               Text="SETTINGS" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Window.Resources>
        <ImageBrush x:Key="ResourcePlayButtonImage" ImageSource="../../Resources/Button_Images/appbar.control.play.png" />
        <ImageBrush x:Key="ResourcePauseButtonImage" ImageSource="../../Resources/Button_Images/appbar.control.pause.png" />
        <ImageBrush x:Key="ResourceMuteButtonImage" ImageSource="../../Resources/Button_Images/appbar.sound.mute.png" />
        <ImageBrush x:Key="ResourcePreviousTrackButtonImage" ImageSource="../../Resources/Button_Images/appbar.control.rewind.png" />
        <ImageBrush x:Key="ResourceStopButtonImage" ImageSource="../../Resources/Button_Images/appbar.control.stop.png"/>
        <ImageBrush x:Key="ResourceNextTrackButtonImage"  ImageSource="../../Resources/Button_Images/appbar.control.fastforward.png"/>
        <ImageBrush x:Key="ResourceRepeatButtonImage" ImageSource="../../Resources/Button_Images/appbar.repeat.png" />
        <ImageBrush x:Key="ResourceShuffleButtonImage" ImageSource="../../Resources/Button_Images/appbar.shuffle.png"/>
        

        <BooleanToVisibilityConverter x:Key="BooleanToVisibleOrHidden" />
        <converters:BooleanToVisibleOrHiddenInverseConverter x:Key="BooleanToVisibleOrHiddenInverse" />
        <converters:PlayPauseButtonBackgroundConverter x:Key="PlayPauseButtonBackgroundConverter" />
        <converters:MediaVolumeConverter x:Key="MediaVolumeConverter" />
        <converters:MediaItemSelectedToVisibilityConverter x:Key="MediaItemSelectedToVisibilityConverter" />
        <converters:MediaItemSelectedToEnabledConverter x:Key="SliderToEnabledWhenMediaItemSelectedConverter" />
        <converters:PriorityMultiValueConverter x:Key="PriorityMultiValueConverter" />
        <converters:RowHeightSumMultiValueConverter x:Key="RowHeightSumMultiValueConverter" />
    </Window.Resources>

    <Grid x:Name="TopMostGrid" AllowDrop="True" Background="Transparent" DragEnter="TopMostGrid_DragEnter" Drop="TopMostGrid_Drop" ZIndex="999">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2.8*" />
                <RowDefinition Height="0.2*" />
                <RowDefinition Height="0.12*" />
                <RowDefinition Height="0.10*" />
                <RowDefinition Height="0.2*" x:Name="RowButtons1" />
                <RowDefinition Height="0.2*" x:Name="RowButtons2" />
                <RowDefinition Height="0.0400*" />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.1*" />
            </Grid.ColumnDefinitions>

            <Expander Focusable="False" Name="LyricsExpander" Header="Lyrics (Available)" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Panel.ZIndex="1" Visibility="{Binding ModelMediaPlayer.SelectedMediaItem.HasLyrics, FallbackValue=Hidden, Mode=TwoWay,  Converter={StaticResource BooleanToVisibleOrHidden}}" Collapsed="LyricsExpander_Collapsed" Expanded="LyricsExpander_Expanded">
                <Grid Background="#FFE5E5E5">
                    <TextBox Name="TextboxLyrics" Text="{Binding ModelMediaPlayer.SelectedMediaItem.Lyrics}" ContextMenu="{x:Null}" Cursor="Arrow" CaretBrush="Transparent" VerticalScrollBarVisibility="Visible" TextWrapping="Wrap" Focusable="False" IsTabStop="False" AllowDrop="False"/>
                </Grid>
            </Expander>

            <MediaElement Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="12" Source="{Binding ModelMediaPlayer.SelectedMediaItem.FilePath}" LoadedBehavior="{Binding ModelMediaPlayer.MediaState}" Name="MediaElement" Volume="{Binding ModelMediaPlayer.MediaVolume, Converter={StaticResource MediaVolumeConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MediaOpened" >
                        <i:InvokeCommandAction Command="{Binding MediaOpenedCommand}" CommandParameter="{Binding ElementName=MediaElement}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MediaElement>

            <Grid Grid.Row="0" Grid.Column="12" Grid.RowSpan="2" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.05*" />
                    <RowDefinition Height="0.95*" />
                </Grid.RowDefinitions>

                <fa:ImageAwesome Grid.Row="0" Icon="Spinner" HorizontalAlignment="Right" Margin="5" Visibility="{Binding ModelMediaPlayer.IsLoadingMediaItems, FallbackValue=Hidden, Mode=TwoWay, Converter={StaticResource BooleanToVisibleOrHidden}}" Foreground="White" Spin="True" />
                <Label Content="Media List Loading..." Visibility="{Binding ModelMediaPlayer.IsLoadingMediaItems, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibleOrHidden}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" />
                <Label Content="Media List " Visibility="{Binding ModelMediaPlayer.IsLoadingMediaItems, TargetNullValue=Hidden, Converter={StaticResource BooleanToVisibleOrHiddenInverse}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" />
                <ListView Focusable="False" BorderThickness="1 0 0 0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Visibility="{Binding ModelMediaPlayer.SelectedMediaItem, TargetNullValue=Hidden, Converter={StaticResource MediaItemSelectedToVisibilityConverter}}" Padding="10 0 0 0" BorderBrush="{DynamicResource AccentColorBrush}" Name="MediaListBox" Grid.Row="1" Background="Transparent" ItemsSource="{Binding ModelMediaPlayer.MediaList}" SelectedItem="{Binding ModelMediaPlayer.SelectedMediaItem}" SelectionChanged="MediaListBox_SelectionChanged" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.75*" />
                                    <ColumnDefinition Width="0.22*" />
                                    <ColumnDefinition Width="0.03*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding MediaTitle}" TextTrimming="CharacterEllipsis"  />
                                <TextBlock Grid.Column="1" HorizontalAlignment="Right" >
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                            <Binding Path="MediaDuration.Minutes" />
                                            <Binding Path="MediaDuration.Seconds" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle >
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

            </Grid>
           
            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                <Label Visibility="{Binding ModelMediaPlayer.SelectedMediaItem.IsVideo, Converter={StaticResource BooleanToVisibleOrHiddenInverse}}" Content="{Binding ModelMediaPlayer.SelectedMediaItem.Bitrate}" ContentStringFormat="Bitrate : {0} kbps"   />
                <Label Visibility="{Binding ModelMediaPlayer.SelectedMediaItem.IsVideo, Converter={StaticResource BooleanToVisibleOrHidden}}" Content="{Binding ModelMediaPlayer.SelectedMediaItem.VideoResolution}" ContentStringFormat="Resolution : {0}"   />
            </StackPanel>

            <StackPanel Grid.Row="2" Grid.Column="6" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Visibility="{Binding ModelMediaPlayer.SelectedMediaItem, TargetNullValue=Hidden, Converter={StaticResource MediaItemSelectedToVisibilityConverter}}" Text="Elapsed : " />
                <TextBlock Visibility="{Binding ModelMediaPlayer.SelectedMediaItem, TargetNullValue=Hidden, Converter={StaticResource MediaItemSelectedToVisibilityConverter}}" Text="{Binding ModelMediaPlayer.ElapsedTimeFormatted}" />
                <TextBlock Visibility="{Binding ModelMediaPlayer.IsDraggingSeekbarThumb, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibleOrHidden}}" Text=" / " />
                <TextBlock Visibility="{Binding ModelMediaPlayer.IsDraggingSeekbarThumb, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibleOrHidden}}" >
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                            <Binding Path="ModelMediaPlayer.SelectedMediaItem.MediaDuration.Minutes" />
                            <Binding Path="ModelMediaPlayer.SelectedMediaItem.MediaDuration.Seconds" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>

            <!--<StackPanel Grid.Row="1" Grid.Column="13" Orientation="Horizontal" HorizontalAlignment="Center">
                <Label Content="Duration : 0:00" />
            </StackPanel>-->
            
            <StackPanel Grid.Row="0" Grid.Column="6" Grid.RowSpan="2" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <Image Visibility="{Binding ModelMediaPlayer.SelectedMediaItem.IsVideo, Converter={StaticResource BooleanToVisibleOrHiddenInverse}}">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource PriorityMultiValueConverter}">
                            <Binding Path="ModelMediaPlayer.SelectedMediaItem.AlbumArt"  />
                            <Binding Path="ApplicationSettings.SelectedTheme" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
            </StackPanel>

            <Slider Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="13" IsMoveToPointEnabled="True" Name="SeekBar" Value="{Binding ModelMediaPlayer.ElapsedTime}" IsEnabled="{Binding ModelMediaPlayer.SelectedMediaItem, TargetNullValue=False, Converter={StaticResource SliderToEnabledWhenMediaItemSelectedConverter}}" Maximum="{Binding ModelMediaPlayer.SelectedMediaItem.MediaDuration.TotalSeconds}" PreviewMouseUp="SeekBar_PreviewMouseUp" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged" >
                        <i:InvokeCommandAction Command="{Binding SeekbarValueChangedCommand}" CommandParameter="{Binding ElementName=SeekBar}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="GotMouseCapture" >
                        <i:InvokeCommandAction Command="{Binding SeekbarThumbStartedDraggingCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostMouseCapture" >
                        <i:InvokeCommandAction Command="{Binding SeekbarThumbCompletedDraggingCommand}" CommandParameter="{Binding ElementName=MediaElement}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Slider>

            <ToggleButton Focusable="False" Grid.Row="4" Grid.Column="10" Grid.RowSpan="2" Loaded="ToggleButton_OnLoaded" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding ShuffleMediaListCommand}" CommandParameter="{Binding ElementName=MediaListBox}" Background="{StaticResource ResourceShuffleButtonImage}" Style="{DynamicResource MetroCircleToggleButtonStyle}" />
            <ToggleButton Focusable="False" Grid.Row="4" Grid.Column="9" Grid.RowSpan="2" Loaded="ToggleButton_OnLoaded"  Foreground="{DynamicResource AccentColorBrush}" Command="{Binding RepeatMediaListCommand}" Background="{StaticResource ResourceRepeatButtonImage}"  Style="{DynamicResource MetroCircleToggleButtonStyle}" />
            <Button Focusable="False" Grid.Row="4" Grid.Column="8" Grid.RowSpan="2" Loaded="Button_OnLoaded" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding NextTrackCommand}" Background="{StaticResource ResourceNextTrackButtonImage}"  Style="{DynamicResource MetroCircleButtonStyle}" />
            <Button Name="ButtonPlayPause" Grid.Row="4" Grid.Column="7" Grid.RowSpan="2" Loaded="Button_OnLoaded" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding PlayPauseCommand}" Background="{Binding ModelMediaPlayer.MediaState, Converter={StaticResource PlayPauseButtonBackgroundConverter}, FallbackValue={StaticResource ResourcePlayButtonImage}}" Style="{DynamicResource MetroCircleButtonStyle}" >
                <!--<Button.Width>
                    <MultiBinding Converter="{StaticResource RowHeightSumMultiValueConverter}">
                        <Binding Path="ActualHeight" ElementName="RowButtons1" Mode="OneWay" />
                        <Binding Path="ActualHeight" ElementName="RowButtons2" Mode="OneWay" />
                    </MultiBinding>
                </Button.Width>-->
            </Button>
            <Button Focusable="False" Grid.Row="4" Grid.Column="6" Grid.RowSpan="2" Loaded="Button_OnLoaded" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding StopCommand}" Background="{StaticResource ResourceStopButtonImage}" Style="{DynamicResource MetroCircleButtonStyle}" />
            <Button Focusable="False" Grid.Row="4" Grid.Column="5" Grid.RowSpan="2" Loaded="Button_OnLoaded" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding PreviousTrackCommand}" Background="{StaticResource ResourcePreviousTrackButtonImage}"  Style="{DynamicResource MetroCircleButtonStyle}" />
            <ToggleButton Focusable="False" Grid.Row="4" Grid.Column="4" Grid.RowSpan="2" Loaded="ToggleButton_OnLoaded"  Foreground="{DynamicResource AccentColorBrush}" Name="ButtonMute" Command="{Binding MuteCommand}" Background="{StaticResource ResourceMuteButtonImage}" Style="{DynamicResource MetroCircleToggleButtonStyle}" />

            <Button Focusable="False" Grid.Row="5" Grid.Column="1" Content="Add File(s)" BorderBrush="{DynamicResource AccentColorBrush}" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding AddMediaCommand}" />
            <Button Focusable="False" Grid.Row="5" Grid.Column="13" Content="Clear Media List" BorderBrush="{DynamicResource AccentColorBrush}" Foreground="{DynamicResource AccentColorBrush}" Command="{Binding ClearMediaListCommand}" />

        </Grid>
    </Grid>
</Controls:MetroWindow>
