<Controls:MetroWindow x:Class="MediaPlayer.View.Views.ViewMediaPlayer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:converters="clr-namespace:MediaPlayer.View.Converters"
        xmlns:extensions="clr-namespace:MediaPlayer.View.Extensions"
        xmlns:genericControls="clr-namespace:Generic.Controls;assembly=Generic" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:viewmodel="clr-namespace:MediaPlayer.ViewModel;assembly=MediaPlayer.ViewModel"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
        mc:Ignorable="d"
        SaveWindowPosition="True"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        Title="{Binding SelectedMediaItem.WindowTitle, FallbackValue='Media Player'}" ShowMaxRestoreButton="False" Height="768" Width="1366" MinHeight="768" MinWidth="1366">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" >
            <i:InvokeCommandAction Command="{Binding MainWindowClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Controls:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding MediaControlsViewModel.PlayPauseCommand}" CommandParameter="{Binding}" Key="MediaPlayPause" />
        <KeyBinding Command="{Binding MediaControlsViewModel.StopCommand}" CommandParameter="{Binding}" Key="MediaStop" />
        <KeyBinding Command="{Binding MediaControlsViewModel.NextTrackCommand}" CommandParameter="{Binding}" Key="MediaNextTrack" />
        <KeyBinding Command="{Binding MediaControlsViewModel.PreviousTrackCommand}" CommandParameter="{Binding}" Key="MediaPreviousTrack" />
    </Controls:MetroWindow.InputBindings>
    <Controls:MetroWindow.Background>
        <SolidColorBrush Color="{Binding SettingsManager.BackgroundColor, FallbackValue=Black}" Opacity="{Binding SettingsManager.Opacity}"/>
    </Controls:MetroWindow.Background>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding OpenSettingsWindowCommand}">
                <StackPanel Orientation="Horizontal">
                    <fa5:ImageAwesome Width="15"  Height="15" Icon="Solid_Cog" Foreground="#FFFFFF" />
                    <TextBlock Margin="5 0 5 0"
                               VerticalAlignment="Center"
                               Text="SETTINGS" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Window.Resources>

        <!--Dark Mode-->
        <ImageBrush x:Key="ResourcePlayButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.control.play_dark.png" />
        <ImageBrush x:Key="ResourcePauseButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.control.pause_dark.png" />
        <ImageBrush x:Key="ResourceMuteButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.sound.mute_dark.png" />
        <ImageBrush x:Key="ResourcePreviousTrackButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.control.rewind_dark.png" />
        <ImageBrush x:Key="ResourceStopButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.control.stop_dark.png"/>
        <ImageBrush x:Key="ResourceNextTrackButtonImage_Dark"  ImageSource="../Resources/Button_Images/appbar.control.fastforward_dark.png"/>
        <ImageBrush x:Key="ResourceRepeatButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.repeat_dark.png" />
        <ImageBrush x:Key="ResourceShuffleButtonImage_Dark" ImageSource="../Resources/Button_Images/appbar.shuffle_dark.png"/>
        
        <!--Light Mode-->
        <ImageBrush x:Key="ResourcePlayButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.control.play_light.png" />
        <ImageBrush x:Key="ResourcePauseButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.control.pause_light.png" />
        <ImageBrush x:Key="ResourceMuteButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.sound.mute_light.png" />
        <ImageBrush x:Key="ResourcePreviousTrackButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.control.rewind_light.png" />
        <ImageBrush x:Key="ResourceStopButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.control.stop_light.png"/>
        <ImageBrush x:Key="ResourceNextTrackButtonImage_Light"  ImageSource="../Resources/Button_Images/appbar.control.fastforward_light.png"/>
        <ImageBrush x:Key="ResourceRepeatButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.repeat_light.png" />
        <ImageBrush x:Key="ResourceShuffleButtonImage_Light" ImageSource="../Resources/Button_Images/appbar.shuffle_light.png"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:PlayPauseButtonBackgroundConverter x:Key="PlayPauseButtonBackgroundConverter" />
        <converters:MediaVolumeConverter x:Key="MediaVolumeConverter" />
        <converters:AlbumArtMultiValueConverter x:Key="AlbumArtMultiValueConverter" />
        <converters:ElapsedTimeTimeSpanToSecondsConverter x:Key="ElapsedTimeTimeSpanToSecondsConverter" />
        <converters:MediaElementOpenedMultiValueConverter x:Key="MediaElementOpenedMultiValueConverter" />
        <converters:ButtonBackgroundConverter x:Key="ButtonBackgroundConverter" />
        
    </Window.Resources>

    <Grid x:Name="TopMostGrid" AllowDrop="True" Background="Transparent" ZIndex="999">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="DragEnter" >
                <i:InvokeCommandAction Command="{Binding TopMostGridDragEnterCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Drop" >
                <i:InvokeCommandAction Command="{Binding TopMostGridDropCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2.8*" />
                <RowDefinition Height="0.2*" />
                <RowDefinition Height="0.12*" />
                <RowDefinition Height="0.10*" />
                <RowDefinition Height="0.2*" x:Name="RowButtons1" />
                <RowDefinition Height="0.2*" x:Name="RowButtons2" />
                <RowDefinition Height="0.0400*" />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="0.6*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.1*" />
            </Grid.ColumnDefinitions>

            <Expander Focusable="False" Name="LyricsExpander" Header="Lyrics (Available)" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Panel.ZIndex="1" Visibility="{Binding SelectedMediaItem.HasLyrics, FallbackValue=Hidden,  Converter={StaticResource BooleanToVisibilityConverter}}" >
                <Grid Background="#FFE5E5E5">
                    <TextBox Name="TextboxLyrics" Text="{Binding SelectedMediaItem.Lyrics}" ContextMenu="{x:Null}" Cursor="Arrow" CaretBrush="Transparent" VerticalScrollBarVisibility="Visible" TextWrapping="Wrap" Focusable="False" IsTabStop="False" AllowDrop="False"/>
                </Grid>
            </Expander>

            <MediaElement Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="12" extensions:MediaElementExtension.Position="{Binding MediaControlsViewModel.MediaElementPosition}" Source="{Binding SelectedMediaItem.FilePath}" LoadedBehavior="{Binding MediaControlsViewModel.MediaState}" Name="MediaElement" Volume="{Binding MediaControlsViewModel.MediaVolume, Converter={StaticResource MediaVolumeConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MediaOpened">
                        <i:InvokeCommandAction Command="{Binding MediaOpenedCommand}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource MediaElementOpenedMultiValueConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding ElementName="MediaElement" />
                                        <Binding Path="" />  <!-- Pass Viewmodel itself to converter along with Media Element -->
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MediaElement>

            <Grid Grid.Row="0" Grid.Column="12" Grid.RowSpan="2" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.05*" />
                    <RowDefinition Height="0.95*" />
                </Grid.RowDefinitions>

                <fa5:ImageAwesome Grid.Row="0" Icon="Solid_Spinner" Foreground="{Binding SettingsManager.BackgroundColorInverse}" HorizontalAlignment="Right" Margin="5" Visibility="{Binding BusyViewModel.IsLoading, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibilityConverter}}" Spin="True" />
                <Label Content="{Binding BusyViewModel.MediaListTitle}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" />
                <genericControls:AutoScrollListView Focusable="False" BorderThickness="1 0 0 0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Visibility="{Binding IsMediaListPopulated, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="10 0 0 0" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" Name="MediaListBox" Grid.Row="1" Background="Transparent" ItemsSource="{Binding MediaItems}" SelectedItem="{Binding SelectedMediaItem}">
                    <genericControls:AutoScrollListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.75*" />
                                    <ColumnDefinition Width="0.22*" />
                                    <ColumnDefinition Width="0.03*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{Binding MediaTitle}" TextTrimming="CharacterEllipsis"  />
                                <TextBlock Grid.Column="1" HorizontalAlignment="Right" >
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                            <Binding Path="Duration.Minutes" />
                                            <Binding Path="Duration.Seconds" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </genericControls:AutoScrollListView.ItemTemplate>
                    <genericControls:AutoScrollListView.ItemContainerStyle >
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </genericControls:AutoScrollListView.ItemContainerStyle>
                </genericControls:AutoScrollListView>

            </Grid>

            <StackPanel Grid.Row="0" Grid.Column="6" Grid.RowSpan="2" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <Image Visibility="{Binding SelectedMediaItem.IsAudio, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource AlbumArtMultiValueConverter}">
                            <Binding Path="SelectedMediaItem.AlbumArt"  />
                            <Binding Path="SettingsManager.Accent" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
            </StackPanel>

            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                <Label Visibility="{Binding IsMediaListPopulated, Converter={StaticResource BooleanToVisibilityConverter}}" Content="{Binding SelectedMediaItem.InfoLabel}" />
                <!--<Label Visibility="{Binding SelectedMediaItem.IsAudio, Converter={StaticResource BooleanToVisibilityConverter}}" Content="{Binding SelectedMediaItem.LabelInfo}" ContentStringFormat="Bitrate: {0} kbps"   />
                <Label Visibility="{Binding SelectedMediaItem.IsVideo, Converter={StaticResource BooleanToVisibilityConverter}}" Content="{Binding SelectedMediaItem.Resolution}" ContentStringFormat="Resolution: {0}"   />-->
            </StackPanel>

            <StackPanel Grid.Row="2" Grid.Column="6" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Visibility="{Binding IsMediaListPopulated, TargetNullValue=Hidden, Converter={StaticResource BooleanToVisibilityConverter}}" Text="Elapsed: " />
                <TextBlock Visibility="{Binding IsMediaListPopulated, TargetNullValue=Hidden, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                            <Binding Path="SelectedMediaItem.ElapsedTime.Minutes" />
                            <Binding Path="SelectedMediaItem.ElapsedTime.Seconds" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                
                <TextBlock Visibility="{Binding MediaControlsViewModel.IsUserDraggingSeekbarThumb, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibilityConverter}}" Text=" / " />
                <TextBlock Visibility="{Binding MediaControlsViewModel.IsUserDraggingSeekbarThumb, TargetNullValue=Hidden, FallbackValue=Hidden, Converter={StaticResource BooleanToVisibilityConverter}}" >
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                            <Binding Path="SelectedMediaItem.Duration.Minutes" />
                            <Binding Path="SelectedMediaItem.Duration.Seconds" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>

            <Slider Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="13" IsMoveToPointEnabled="True" Name="SeekBar" Value="{Binding SelectedMediaItem.ElapsedTime, Converter={StaticResource ElapsedTimeTimeSpanToSecondsConverter}}" IsEnabled="{Binding IsMediaListPopulated, TargetNullValue=False}" Maximum="{Binding SelectedMediaItem.Duration.TotalSeconds}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <i:InvokeCommandAction Command="{Binding MediaControlsViewModel.SeekbarPreviewMouseUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="GotMouseCapture" >
                        <i:InvokeCommandAction Command="{Binding MediaControlsViewModel.SeekbarThumbStartedDraggingCommand}" CommandParameter="{Binding MediaControlsViewModel}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostMouseCapture" >
                        <i:InvokeCommandAction Command="{Binding MediaControlsViewModel.SeekbarThumbCompletedDraggingCommand}" CommandParameter="{Binding MediaControlsViewModel}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Slider>

            <ToggleButton Margin="4 4 4 4" x:Name="Shuffle" Focusable="False" Grid.Row="4" Grid.Column="10" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.ShuffleCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                <ToggleButton.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourceShuffleButtonImage_Dark}">
                        <Binding ElementName="Shuffle" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </ToggleButton.Background>
            </ToggleButton>
            
            <ToggleButton Margin="4 4 4 4" x:Name="Repeat" Focusable="False" Grid.Row="4" Grid.Column="9" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.RepeatMediaListCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                <ToggleButton.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourceRepeatButtonImage_Dark}">
                        <Binding ElementName="Repeat" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </ToggleButton.Background>
            </ToggleButton>
            
            <Button Margin="4 4 4 4" x:Name="NextTrack" Focusable="False" Grid.Row="4" Grid.Column="8" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.NextTrackCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <Button.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourceNextTrackButtonImage_Dark}">
                        <Binding ElementName="NextTrack" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </Button.Background>
            </Button>

            <Button Margin="4 4 4 4" Name="ButtonPlayPause" Grid.Row="4" Grid.Column="7" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.PlayPauseCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <Button.Background>
                    <MultiBinding Converter="{StaticResource PlayPauseButtonBackgroundConverter}" FallbackValue="{StaticResource ResourcePlayButtonImage_Dark}">
                        <Binding Path="MediaControlsViewModel.MediaState"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </Button.Background>
            </Button>

            <Button Margin="4 4 4 4" x:Name="Stop" Focusable="False" Grid.Row="4" Grid.Column="6" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.StopCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <Button.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourceStopButtonImage_Dark}">
                        <Binding ElementName="Stop" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </Button.Background>
            </Button>
            
            <Button Margin="4 4 4 4" x:Name="PreviousTrack" Focusable="False" Grid.Row="4" Grid.Column="5" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.PreviousTrackCommand}" CommandParameter="{Binding}" Style="{DynamicResource MahApps.Styles.Button.Circle}">
                <Button.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourcePreviousTrackButtonImage_Dark}">
                        <Binding ElementName="PreviousTrack" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </Button.Background>
            </Button>
            
            <ToggleButton Margin="4 4 4 4" x:Name="Mute" Focusable="False" Grid.Row="4" Grid.Column="4" Grid.RowSpan="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.MuteCommand}" CommandParameter="{Binding MediaControlsViewModel}" Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                <ToggleButton.Background>
                    <MultiBinding Converter="{StaticResource ButtonBackgroundConverter}" FallbackValue="{StaticResource ResourceMuteButtonImage_Dark}">
                        <Binding ElementName="Mute" Path="Name"  />
                        <Binding Path="SettingsManager.BaseColor" />
                    </MultiBinding>
                </ToggleButton.Background>
            </ToggleButton>
            <Button Focusable="False" Grid.Row="5" Grid.Column="1" Content="Add File(s)" FontWeight="Regular" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.AddMediaCommand}" />
            <Button Focusable="False" Grid.Row="5" Grid.Column="13" Content="Clear Media List" FontWeight="Regular" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" Command="{Binding MediaControlsViewModel.ClearMediaListCommand}" CommandParameter="{Binding}" />
        </Grid>
    </Grid>
</Controls:MetroWindow>







